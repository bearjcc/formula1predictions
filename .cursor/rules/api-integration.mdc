# API Integration Standards

## F1 API Integration
- Use the official F1 API SDK (@f1api/sdk)
- Implement proper error handling and retry logic
- Cache API responses to minimize rate limiting
- Handle API downtime gracefully
- Validate API response data before processing

## Data Synchronization
- Implement scheduled jobs for data updates
- Use queues for background processing
- Maintain data consistency across race results
- Handle driver/team changes mid-season
- Implement incremental updates to minimize API calls

## Error Handling
- Log all API failures with context
- Implement fallback data sources
- Provide user-friendly error messages
- Monitor API health and performance
- Use exponential backoff for retries

## Caching Strategy
- Cache race data for 24 hours
- Cache driver/team data for 1 week
- Cache circuit data for 1 month
- Implement cache invalidation on data updates
- Use Redis for distributed caching

## Rate Limiting
- Respect API rate limits
- Implement request queuing
- Use appropriate request intervals
- Monitor API usage patterns
- Implement graceful degradation

## Data Validation
- Validate all API responses
- Handle malformed or incomplete data
- Implement data transformation layers
- Maintain data integrity constraints
- Log data validation failures

## Service Architecture
- Use service classes for API interactions
- Implement proper dependency injection
- Separate API logic from business logic
- Use interfaces for API clients
- Implement proper error boundaries
description:
globs:
alwaysApply: true
---
