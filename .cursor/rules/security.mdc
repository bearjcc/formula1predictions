# Security Standards & Best Practices

## Authentication & Authorization
- Use Laravel's built-in authentication system
- Implement proper role-based access control
- Use policies for model-level authorization
- Secure API endpoints with proper middleware
- Implement proper session management

## Data Protection
- Validate all user inputs with Form Requests
- Use CSRF protection on all forms
- Implement rate limiting on prediction submissions
- Sanitize data before database storage
- Use proper SQL injection prevention

## Privacy & Compliance
- Follow GDPR principles for user data
- Implement proper data retention policies
- Secure user prediction data
- Audit trail for admin actions
- Implement data anonymization where appropriate

## Input Validation
- Use Laravel Form Request classes for validation
- Implement server-side validation for all inputs
- Validate file uploads and media
- Sanitize user-generated content
- Use proper validation error messages

## API Security
- Implement proper API authentication
- Use API rate limiting
- Validate API request data
- Implement proper error handling
- Use HTTPS for all API communications

## Session Security
- Use secure session configuration
- Implement proper session timeout
- Use secure cookie settings
- Implement session regeneration
- Monitor for session hijacking

## File Security
- Validate file uploads
- Implement proper file storage security
- Use secure file permissions
- Scan uploaded files for malware
- Implement proper file access controls

## Error Handling
- Don't expose sensitive information in errors
- Log security-related events
- Implement proper error boundaries
- Use generic error messages for users
- Monitor for security anomalies
description:
globs:
alwaysApply: true
---
