# Frontend Development Standards

## Component Architecture
- Use Blade components for reusability
- Implement proper component composition
- Follow consistent naming conventions
- Use Flux UI components when available
- Create reusable UI patterns

## Responsive Design
- Mobile-first approach
- Use Tailwind CSS utility classes
- Test on multiple devices and browsers
- Implement proper accessibility features
- Use responsive breakpoints consistently

## User Experience
- Provide loading states for all interactions
- Implement proper error handling
- Use consistent design patterns
- Optimize for performance
- Implement smooth animations

## Asset Management
- Use Vite for asset bundling
- Optimize images and media files
- Implement proper asset versioning
- Use CDN for global assets
- Minimize bundle sizes

## Accessibility
- Follow WCAG guidelines
- Use semantic HTML elements
- Implement proper ARIA labels
- Ensure keyboard navigation
- Test with screen readers

## JavaScript Standards
- Use modern JavaScript features
- Implement proper error handling
- Use event delegation where appropriate
- Minimize DOM manipulation
- Follow consistent naming conventions

## CSS Standards
- Use Tailwind CSS utility classes
- Follow consistent spacing and sizing
- Implement proper color schemes
- Use CSS custom properties
- Maintain responsive design

## Performance Optimization
- Lazy load components and images
- Optimize critical rendering path
- Minimize layout shifts
- Use efficient animations
- Monitor Core Web Vitals
description:
globs:
alwaysApply: true
---
